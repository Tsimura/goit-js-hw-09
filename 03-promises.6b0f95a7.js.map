{"version":3,"sources":["js/03-promises.js"],"names":["ref","form","document","querySelector","firstDelay","delayStep","amount","btn","createPromise","position","delay","Promise","resolve","reject","Math","random","setTimeout","createCunter","makeDelay","i","then","console","log","step"],"mappings":";AAAA,MAAMA,EAAM,CACVC,KAAMC,SAASC,cAAc,QAC7BC,WAAYF,SAASC,cAAc,uBACnCE,UAAWH,SAASC,cAAc,sBAClCG,OAAQJ,SAASC,cAAc,wBAC/BI,IAAKL,SAASC,cAAc,0BAK9B,SAASK,EAAcC,EAAUC,GACxB,OAAA,IAAIC,QAAQ,CAACC,EAASC,KACLC,KAAKC,SAE3BC,WAAW,KAETJ,EAAQ,CAAEH,SAAAA,EAAUC,MAAAA,KAKnBA,KAKP,SAASO,EAAaX,GACpBY,EAAU,EAAG,EAAG,GACX,IAAA,IAAIC,EAAI,EAAGA,EAAIb,EAAQa,GAAK,EAAG,CAC9Bb,IAAAA,EAAS,EACbA,GAAUa,EAGVX,EAAc,EAAG,MAAMY,KAAK,EAAGX,SAAAA,EAAUC,MAAAA,MACvCW,QAAQC,2BAA2BhB,QAAaa,UAOtD,SAASD,EAAUR,EAAOa,EAAMjB,GACzB,IAAA,IAAIa,EAAI,EAAGA,EAAIb,EAAQa,GAAK,EAC/BT,GAASa,EACTF,QAAQC,IAAIZ,GAnBhBO,EAAa","file":"03-promises.6b0f95a7.js","sourceRoot":"../src","sourcesContent":["const ref = {\n  form: document.querySelector('form'),\n  firstDelay: document.querySelector('input[name=\"delay\"]'),\n  delayStep: document.querySelector('input[name=\"step\"]'),\n  amount: document.querySelector('input[name=\"amount\"]'),\n  btn: document.querySelector('button[type=\"submit\"]'),\n};\n\n// ref.form.addEventListener('submit', onFormSubmit);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    // const delay = 1000;\n    setTimeout(() => {\n      // if (shouldResolve) {\n      resolve({ position, delay });\n      // }\n      // else {\n      //   reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      // }\n    }, delay);\n  });\n}\n\ncreateCunter(5);\nfunction createCunter(amount) {\n  makeDelay(1, 1, 2);\n  for (let i = 0; i < amount; i += 1) {\n    let amount = 1;\n    amount += i;\n    // console.log(amount);\n\n    createPromise(2, 1500).then(({ position, delay }) => {\n      console.log(`✅ Fulfilled promise ${amount} in ${i}ms`);\n    });\n    // delay += amount;\n  }\n}\n\n// makeDelay(0, 1, 2);\nfunction makeDelay(delay, step, amount) {\n  for (let i = 0; i < amount; i += 1) {\n    delay += step;\n    console.log(delay);\n  }\n}\n// createPromise(2, 1500).then(({ position, delay }) => {\n//   console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n// });\n\n// function onMakeSuccess(result) {\n//   console.log(`✅ Fulfilled promise `);\n// }\n\n// function onMakeError(error) {\n//   console.log(`❌ Rejected promise `);\n// }\n\n// function onFormSubmit(event) {\n//   event.preventDefault();\n//   const formElement = event.currentTarget.elements;\n//   const delayEl = formElement.delay.value;\n//   const stepEl = formElement.step.value;\n//   const amountEl = formElement.amount.value;\n//   const formData = { delayEl, stepEl, amountEl };\n//   // console.log(delayEl);\n//   // console.log(stepEl);\n//   // console.log(amountEl);\n//   // console.log(formData);\n\n//   // createPromise(2).then(onMakeSuccess).catch(onMakeError);\n// }\n\n// function getSolution() {\n//   return Math.random() > 0.3;\n// }\n\n//Матеріал із завдання!!!\n// function createPromise(position, delay) {\n//   const shouldResolve = Math.random() > 0.3;\n//   if (shouldResolve) {\n//     // Fulfill\n//   } else {\n//     // Reject\n//   }\n// }\n\n// createPromise(2, 1500)\n//   .then(({ position, delay }) => {\n//     console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n//     console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//   });\n\n// console.log(ref.form);\n// console.log(ref.firstDelay);\n// console.log(ref.delayStep);\n// console.log(ref.amount);\n// console.log(ref.btn);\n"]}